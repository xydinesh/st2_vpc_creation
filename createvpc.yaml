version: '2.0'

name: default.createvpc
description: A workflow to create a vpc with subnets, routes and igw
workflows:
  main:
    input:
      - cidr_block
      - name
      - dry_run
      - instance_tenancy

    output:
      vpc_id: <% $.vpc_id %>

    tasks:
      create_vpc:
        action: aws.vpc_create_vpc
        input:
          cidr_block: <% $.cidr_block %>
          instance_tenancy: <% $.instance_tenancy %>
          dry_run: <% $.dry_run %>
        publish:
          vpc_id: <% task(create_vpc).result.result[0]['id'] %>
        on-error:
          - notify
          - fail
        on-success:
          - create_vpc_tags
      create_vpc_tags:
        action: aws.vpc_create_tags
        input:
          resource_ids: <% $.vpc_id %>
          tags: "Name=<% $.name %>"
        on-error:
          - notify
          - fail
        on-success:
          - create_subnet_1
      create_subnet_1:
        action: aws.vpc_create_subnet
        input:
          vpc_id: <% $.vpc_id %>
          cidr_block: 10.0.1.0/24
          availability_zone: "us-east-2a"
        publish:
          subnet_1_id: <% task(create_subnet_1).result.result[0]['id'] %>
        on-error:
          - notify
          - fail
        on-success:
          - create_subnet_2
      create_subnet_2:
        action: aws.vpc_create_subnet
        input:
          vpc_id: <% $.vpc_id %>
          cidr_block: 10.0.2.0/24
          availability_zone: "us-east-2b"
        publish:
          subnet_2_id: <% task(create_subnet_2).result.result[0]['id'] %>
        on-error:
          - notify
          - fail
        on-success:
          - create_igw
      create_igw:
        action: aws.vpc_create_internet_gateway
        publish:
          igw_id: <% task(create_igw).result.result[0]['id'] %>
        on-error:
          - notify
          - fail
        on-success:
          - attach_igw
      attach_igw:
        action: aws.vpc_attach_internet_gateway
        input:
          vpc_id: <% $.vpc_id %>
          internet_gateway_id: <% $.igw_id %>
        on-error:
          - notify
          - fail
        on-success:
          - create_route_table
      create_route_table:
        action: aws.vpc_create_route_table
        input:
          vpc_id: <% $.vpc_id %>
        publish:
          route_table_id: <% task(create_route_table).result.result[0]['id'] %>
        on-error:
          - notify
          - fail
        on-success:
          - associate_route_table
      associate_route_table:
        action: aws.vpc_associate_route_table
        input:
          route_table_id: <% $.route_table_id %>
          subnet_id: <% $.subnet_1_id %>
        on-error:
          - notify
          - fail
        on-success:
          - create_route
      create_route:
        action: aws.vpc_create_route
        input:
          route_table_id: <% $.route_table_id %>
          destination_cidr_block: 0.0.0.0/0
          gateway_id: <% $.igw_id %>
        on-error:
          - notify
          - fail
        on-success:
          - notify
      notify:
        action: core.local
        input:
          cmd: printf "created vpc <% $.vpc_id %>" 
